--[[
	Solve for greatest difference of two-values in 
	an array, left-to-right only, e.i. buying a stock
	for the greatest profit.
]]


function profit_no_loop(tab)
	local tlow = tab[1]
	local thigh, high, tdiff, res = 0, 0, 0, 0
	local i = 2

	while i <= #tab do
		-- new high
		if tab[i] > tlow then
			thigh = tab[i]
			tdiff = thigh - tlow -- check diff between prev low and high
			if res < tdiff then 
				res = tdiff
				high = thigh -- SET NEW HIGH
			end
		else tlow = tab[i]
		end
		i = i + 1
	end
	return res
end


local tab1 = { 7, 1, 5, 3, 6, 4 }
local tab2 = { 7, 6, 4, 3, 1 }
local tab3 = { 3, 1, 10, 6, 4 }
local tab4 = { 1, 3 }
local tab5 = { 37, 29, 11, 60, 51, 59, 103, 39, 41, 6, 24, 87 }
local tabx = { 5, 4, 6, 4, 2, 3, 5 }
local poop1 = { 6 }
local poop2 = { }

print("Profit for Table 1: " ..  profit_no_loop(tab1))
print("Profit for Table 2: " ..  profit_no_loop(tab2))
print("Profit for Table 3: " ..  profit_no_loop(tab3))
print("Profit for Table 4: " ..  profit_no_loop(tab4))
print("Profit for Table 5: " ..  profit_no_loop(tab5))
print("Profit for Table x: " ..  profit_no_loop(tabx))
print("Profit for Poop 1 : " ..  profit_no_loop(poop1))
print("Profit for Poop 2 : " ..  profit_no_loop(poop2))




